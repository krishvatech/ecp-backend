"""
Models for the organizations app.

Defines an `Organization` that can have many members and is owned by a
single user.  Slugs are autogenerated from the name on save.  The
owner is automatically added to the members list when the organization
is saved.
"""
from django.db import models
from django.contrib.auth.models import User
from django.utils.text import slugify


class Organization(models.Model):
    """Represents an organization with members and an owner."""

    name = models.CharField(max_length=255, unique=True)
    slug = models.SlugField(max_length=255, unique=True, blank=True)
    owner = models.ForeignKey(User, on_delete=models.CASCADE, related_name="owned_organizations")
    description = models.TextField(blank=True)
    members = models.ManyToManyField(User, related_name="organizations", blank=True)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def save(self, *args, **kwargs):
        if not self.slug:
            self.slug = slugify(self.name)
        super().save(*args, **kwargs)
        # Ensure the owner is always a member
        if self.owner and not self.members.filter(pk=self.owner.pk).exists():
            self.members.add(self.owner)

    def __str__(self) -> str:
        return self.name