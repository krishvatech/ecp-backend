# Generated by Django 5.2.6 on 2025-09-17 04:24

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('events', '0003_alter_event_id'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(help_text='Message content.')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Creation timestamp.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Last update timestamp.')),
                ('event', models.ForeignKey(help_text='Event this chat message belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='chat_messages', to='events.event')),
                ('user', models.ForeignKey(help_text='User who authored the message.', on_delete=django.db.models.deletion.CASCADE, related_name='chat_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Chat message',
                'verbose_name_plural': 'Chat messages',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['event', '-created_at'], name='chat_event_created_idx')],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(help_text='Question text.')),
                ('is_answered', models.BooleanField(default=False, help_text='Whether the question has an answer.')),
                ('answer', models.TextField(blank=True, default='', help_text='Answer text, if provided.')),
                ('answered_at', models.DateTimeField(blank=True, help_text='When the question was answered.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Creation timestamp.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Last update timestamp.')),
                ('answered_by', models.ForeignKey(blank=True, help_text='User who answered the question.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='answered_questions', to=settings.AUTH_USER_MODEL)),
                ('event', models.ForeignKey(help_text='Event this question belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='events.event')),
                ('user', models.ForeignKey(help_text='User who asked the question.', on_delete=django.db.models.deletion.CASCADE, related_name='questions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['event', '-created_at'], name='qna_event_created_idx'), models.Index(fields=['event', 'is_answered'], name='qna_event_answered_idx')],
            },
        ),
    ]
